{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","searchFilter","handleFiltering","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","persons","deletePerson","filter","x","name","toLowerCase","includes","map","number","onClick","window","confirm","id","Notification","message","className","baseUrl","personsObject","getAll","axios","get","then","r","data","create","newPerson","post","delete","update","newObject","put","App","useState","setPersons","setNewName","setNewNumber","notificationMessage","setNotificationMessage","notificationType","setNotificationType","setSearchFilter","useEffect","personsService","initialPersons","showNotification","setTimeout","event","target","preventDefault","text","person","find","p","changedPerson","returnedPerson","catch","error","newNameObject","returnedPersons","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c10d58c9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ searchFilter, handleFiltering }) => {\n\treturn (\n\t\t<>\n\t\t\tfilter with name:\n\t\t\t<input value={searchFilter} onChange={handleFiltering} />\n\t\t</>\n\t)\n}\n\nexport default Filter","import React from \"react\"\n\nconst PersonForm = ({ addPerson, newName, handleNewName, newNumber, handleNewNumber }) => {\n\treturn (\n\t\t<form onSubmit={addPerson}>\n\t\t\t<div>\n\t\t\t\tname: <input value={newName} onChange={handleNewName} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input value={newNumber} onChange={handleNewNumber} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default PersonForm","import React from \"react\"\n\nconst Persons = ({ persons, searchFilter, deletePerson }) => {\n\treturn (\n\t\t<>\n\t\t\t{persons.filter(x => x.name.toLowerCase().includes(searchFilter)).map(x =>\n\t\t\t\t<div key={x.name}>\n\t\t\t\t\t<p>{x.name} {x.number}</p>\n\t\t\t\t\t<button onClick={() => window.confirm(`Delete \"${x.name}\"?`)\n\t\t\t\t\t\t? deletePerson(x.id) : \"\"}>Delete</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Persons","import React from \"react\"\n\nconst Notification = ({ message, type }) => {\n\tif (message === null) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className={type}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(r => r.data)\n}\n\nconst create = (newPerson) => {\n\tconst request = axios.post(baseUrl, newPerson)\n\treturn request.then(r => r.data)\n}\n\nconst deletePerson = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(r => r.data)\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n\treturn request.then(r => r.data)\n}\n\nconst personsObject = { getAll, create, deletePerson, update }\nexport default personsObject","import React, { useEffect, useState } from 'react'\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport Notification from \"./components/Notification\"\nimport personsService from \"./services/persons\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState(\"success\")\n  const [searchFilter, setSearchFilter] = useState(\"\")\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltering = (event) => {\n    setSearchFilter(event.target.value.toLowerCase())\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    let names = persons.map(x => x.name);\n\n    if (!names.includes(newName)) {\n      const newNameObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personsService\n        .create(newNameObject)\n        .then(returnedPersons => {\n          setPersons(persons.concat(returnedPersons))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          showNotification(`Added \"${newNameObject.name}\"`, \"success\")\n        })\n    } else {\n      let text = `\"${newName}\" is already added to the phonebook, replace the old number with a new one?`\n      const confirmed = window.confirm(text)\n\n      if (confirmed) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n\n        personsService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p =>\n              p.id === person.id\n                ? returnedPerson\n                : p))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            showNotification(`Updated number of \"${returnedPerson.name}\"`, \"success\")\n          })\n          .catch(error => {\n            showNotification(`\"${person.name}\" not found in server.`, \"error\")\n          })\n      }\n    }\n  }\n\n  const handleDeletePerson = (id) => {\n    personsService\n      .deletePerson(id)\n      .then(r => {\n        showNotification(\"Person deleted.\", \"success\")\n        setPersons(persons.filter(x => x.id !== id))\n      })\n  }\n\n  const showNotification = (message, type) => {\n    setNotificationMessage(message)\n    type === \"error\" ? setNotificationType(\"error\") : setNotificationType(\"success\")\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 2500)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType} />\n      <Filter searchFilter={searchFilter} handleFiltering={handleFiltering} />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        searchFilter={searchFilter}\n        deletePerson={handleDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}